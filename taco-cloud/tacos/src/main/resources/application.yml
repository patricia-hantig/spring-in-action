spring:
  security:
    user:
      name: buzz
      password: infinity
  data:
    rest:
      base-path: /api
  jms:
    template:
      default-destination: tacocloud.order.queue
  rabbitmq:
    template:
      exchange: tacocloud.orders
      routing-key: tacocloud.order.queue
      receive-timeout: 30000
      #default-queue: tacocloud.order.queue
  kafka:
    bootstrap-servers:
      - localhost:9092
    template:
      default-topic: tacocloud.orders.topic
    producer:
      keySerializer: org.springframework.kafka.support.serializer.JsonSerializer
      #keySerializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer

taco:
  orders:
    pageSize: 10

logging:
  level:
    tacos: DEBUG


#server:
#  servlet:
#    context-path: /patry

---
spring:
  profiles: prod

  datasource:
    url: jdbc:mysql://localhost/tacocloud
    username: tacouser
    password: tacopassword

logging:
  level:
    tacos: WARN